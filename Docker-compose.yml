services:
  postgres-db-write-review:
    container_name: postgres-db-write-review
    hostname: postgres
    image: postgres:latest
    ports:
       - "5432:5432"
    environment:
      POSTGRES_USER: yinnohs
      POSTGRES_PASSWORD: 123
      POSTGRES_DB: review-write
    command: ["postgres", "-c", "wal_level=logical"]
    volumes:
      - ./db/review/write/postgres:/var/lib/postgresql/data
  zookeeper:
    image: confluentinc/cp-zookeeper:5.5.3
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  mongo-db-review-read:
    image: mongo:latest
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: yinnohs
      MONGO_INITDB_ROOT_PASSWORD: 123
      MONGO_INITDB_DATABASE: review-read

  kafka:
      image: confluentinc/cp-enterprise-kafka:5.5.3
      depends_on: [ zookeeper ]
      environment:
        KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
        KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092, PLAINTEXT_OUTSIDE://localhost:29092
        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_OUTSIDE:PLAINTEXT
        KAFKA_BROKER_ID: 1
        KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
        KAFKA_JMX_PORT: 9991
      ports:
        - "9092:9092"
        - "29092:29092"

  debezium:
      image: debezium/connect:1.4
      environment:
        BOOTSTRAP_SERVERS: kafka:9092
        GROUP_ID: 2
        CONFIG_STORAGE_TOPIC: connect_configs
        OFFSET_STORAGE_TOPIC: connect_offsets
        KEY_CONVERTER: io.confluent.connect.avro.AvroConverter
        VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
        CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry:8081
        CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      depends_on: [ kafka ]
      ports:
        - "8083:8083"

  schema-registry:
      image: confluentinc/cp-schema-registry:5.5.3
      environment:
        - SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL=zookeeper:2181
        - SCHEMA_REGISTRY_HOST_NAME=schema-registry
        - SCHEMA_REGISTRY_LISTENERS=http://schema-registry:8081,http://localhost:8081
      ports:
        - "8081:8081"
      depends_on: [ zookeeper, kafka ]

  kafka-ui:
    image: provectuslabs/kafka-ui:latest  # Kafka UI image by Provectus
    depends_on:
      - kafka
      - debezium  # Ensures Kafka UI starts after Kafka and Debezium
    ports:
      - "8080:8080"  # Expose UI on port 8080
    environment:
      KAFKA_CLUSTERS_0_NAME: local  # Name for the Kafka cluster in the UI
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092  # Kafka bootstrap server for the UI
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181  # Zookeeper connection for the UI
      KAFKA_CLUSTERS_0_KAFKACONNECT_0_NAME: debezium
      KAFKA_CLUSTERS_0_KAFKACONNECT_0_ADDRESS: http://debezium:8083
      DYNAMIC_CONFIG_ENABLED: 'true'
      AUTH_TYPE: LOGIN_FORM  # Authentication type for Kafka UI
      SPRING_SECURITY_USER_NAME: admin  # username to login to ui
      SPRING_SECURITY_USER_PASSWORD: Admin@123  # password to login to ui